---
- hosts: localhost
  vars:
    site: ylitalot.net
  tasks:
  ###
  # setup
  ###
  - name: install bundler
    gem: name={{item}} state=present
    with_items:
      - bundler
  - name: install gems
    shell: bundle install
    args:
      chdir: "files/override-{{site}}"
  - name: git update
    git: repo={{item.repo}} dest={{item.dest}} update=yes
    with_items:
      - { repo: "git@github.com:jackmoore/colorbox.git", dest: "files/colorbox.git" }
      - { repo: "git@bitbucket.org:jylitalo/{{site}}.git", dest: "{{site}}.git" }
  ###
  # .gitignore
  ###
  - name: "add items to .gitignore"
    lineinfile: name=.gitignore create=yes regexp="^{{item}}$" line="{{item}}"
    with_items:
      - .gitignore
      - setup.retry
      - files/images
      - files/colorbox.git
  - name: .gitignore for content
    lineinfile:
      name: "{{site}}.git/.gitignore"
      regexp: "^{{item}}$"
      line: "{{item}}"
    with_items:
      - Gemfile
      - Gemfile.lock
      - _config.yml
      - _layouts
      - _sass
      - assets
      - img
      - index.md
      - js
  ###
  # setup {{site}} with jekyll
  ###
  - name: "{{site}}.git exists?"
    stat: path={{site}}.git/_posts
    register: jekyll_done
  - name: create site
    shell: "jekyll new {{site}}.git"
    args:
      chdir: "files"
    when: not jekyll_done.stat.exists
  - name: clean extra files from jenkins new
    file: path="{{item}}" state=absent
    with_fileglob:
      - "{{site}}.git/about.md"
      - "{{site}}.git/_posts/*-welcome-to-jekyll.markdown"
    when: not jekyll_done.stat.exists 
  ###
  # Colorbox
  ###
  - name: colorbox directories
    file: path="{{site}}.git/{{item}}" state=directory
    with_items:
      - img
      - js/i18n
  - name: link images from colorbox
    file:
      src: "{{item}}"
      dest: "{{site}}.git/img/{{item | basename}}"
      state: hard
    with_fileglob:
      - "files/colorbox.git/example4/images/*"
  - name: link i18n from colorbox
    file:
      src: "{{playbook_dir}}/files/colorbox.git/i18n/jquery.colorbox-fi.js"
      dest: "{{site}}.git/js/i18n/jquery.colorbox-fi.js"
      state: hard
  - name: link javascript from colorbox
    file:
      src: "{{item}}"
      dest: "{{site}}.git/js/{{item | basename}}"
      state: hard
    with_fileglob:
      - "files/colorbox.git/*.js"
  - name: download jquery
    get_url:
      url: https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js
      dest: "{{site}}.git/js/jquery.min.js"
  ###
  # {{site}} specific stuff
  ###
  - name: "override with {{site}}"
    file: src="{{item}}" dest="{{site}}.git/{{item | basename}}" state=link
    with_fileglob:
      - "files/override-{{site}}/*"
  - name: "override with {{site}} (sync)"
    file:
      src: "{{playbook_dir}}/files/override-{{site}}/{{item}}"
      dest: "{{site}}.git/{{item}}"
      state: link
    with_items:
      - _layouts
      - _sass
      - assets
  - name: "images exists?"
    stat: path=files/images
    register: images_dir
  - name: "create images"
    shell: python _plugins/assets_on_jekyll.py
    args:
      chdir: "{{site}}.git"
    when: images_dir.stat.exists
  - name: build site
    shell: "jekyll build"
    args:
      chdir: "{{site}}.git"
